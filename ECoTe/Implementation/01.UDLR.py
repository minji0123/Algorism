# A 는 N x N 크기의 정사각형 공간 위에 서있습니다. 이 공간은 1 X 1 크기의 정사각형으로 나누어져 있습니다.
# 맨 왼쪽 위 좌표 (1,1),  맨 오른쪽 아래 좌표 (N,N), 시작 좌표는 항상 (1,1)
# L: 왼쪽으로 한 칸 이둉, R: 오른쪽으로 한 칸 이동, U: 위로 한 칸 이동, D: 아래로 한 칸 이동
# NxN 크기의 정사각형 공간을 벗어나는 움직임은 무시된다.

####################################################

# 5 공간의 크기를 나타내는 N
# R R R U D D 여행가 A 가 이동할 계획서 내용

# 3 4 도착하는 좌표

####################################################

# N 입력 받기
N = int(input())
plans = input().split()

# 시작좌표
현_세로, 현_가로 = 1, 1

# LRUD 에 따른 이동 방향
# L: 왼쪽으로 한 칸 이둉, R: 오른쪽으로 한 칸 이동, U: 위로 한 칸 이동, D: 아래로 한 칸 이동
# d_세로 = [0,0,-1,1]
# d_가로 = [-1,1,0,0]
directions = [(0, -1), (0, 1), (-1, 0), (1, 0)]
move_types = ['L','R','U','D']

# 이동 계획을 하나씩 확인하기
for plan in plans:
    # 이동 후 좌표 구하기
    for i in range(len(move_types)):
        if plan == move_types[i]:
            # move_세로 = 현_세로 + d_세로[i]
            # move_가로 = 현_가로 + d_가로[i]
            move_세로 = 현_세로 + directions[0]
            move_가로 = 현_가로 + directions[1]
    # 공간을 벗어나는 경우 무시
    if move_세로 < 1 or move_가로 < 1 or move_세로 > N or move_가로 > N:
        continue
    # 이동 수행
    현_세로, 현_가로 = move_세로, move_가로

print(현_세로, 현_가로)